package com.example.board.controller;

import com.example.board.dto.*;
import com.example.board.service.BoardService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/boards")
@CrossOrigin(origins = "http://localhost:3000") // CORS 허용 (필요에 따라 조정)
public class BoardController {
    
    @Autowired
    private BoardService boardService;
    
    // 게시글 목록 조회 (페이지네이션)
    @GetMapping
    public ResponseEntity<Page<BoardSummaryDto>> getBoards(@RequestParam(name="page", defaultValue = "0") int page) {
        return ResponseEntity.ok(boardService.getBoards(page));
    }
    
    // 게시글 상세 조회
    @GetMapping("/{id}")
    public ResponseEntity<BoardDetailDto> getBoardDetail(@PathVariable Long id) {
        return ResponseEntity.ok(boardService.getBoardDetail(id));
    }
    
    // 게시글 생성
    @PostMapping
    public ResponseEntity<BoardDetailDto> createBoard(@RequestBody BoardCreateRequest request) {
        return ResponseEntity.ok(boardService.createBoard(request));
    }
    
    // 게시글 수정
    @PutMapping("/{id}")
    public ResponseEntity<BoardDetailDto> updateBoard(@PathVariable Long id, @RequestBody BoardUpdateRequest request) {
        return ResponseEntity.ok(boardService.updateBoard(id, request));
    }
    
    // 패스워드 검증 (수정/삭제 전)
    @PostMapping("/{id}/verify")
    public ResponseEntity<Void> verifyPassword(@PathVariable Long id, @RequestBody PasswordRequest request) {
        boardService.verifyPassword(id, request.getPassword());
        return ResponseEntity.ok().build();
    }
    
    // 게시글 삭제 (패스워드 검증)
    @PostMapping("/{id}/delete")
    public ResponseEntity<Void> deleteBoard(@PathVariable Long id, @RequestBody PasswordRequest request) {
        boardService.deleteBoard(id, request.getPassword());
        return ResponseEntity.ok().build();
    }
}
